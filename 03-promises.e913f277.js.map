{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GActC,OAZgB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,EAEFI,EAAI,CAAEN,WAAUC,UAGhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IA5CMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAA2BC,GACzBA,EAAEC,iBAEF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAErBpB,EAAc,EAAGqB,OAAOH,EAAMI,QAC3BC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAEvE2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAuCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGzE,IAAK,IAAI6B,EAAI,EAAGA,GAAKV,OAAOD,EAAOE,OAAQS,IACzC/B,EAAc+B,EAAGV,OAAOF,EAAKG,QAAUS,EAAI,GAAIV,OAAOH,EAAMI,QACzDC,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAA3B,GAAS4B,OAAOI,QACd,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import debounce from 'lodash.debounce';\nimport Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', promisesGenerator);\n\nfunction promisesGenerator(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  createPromise(1, Number(delay.value))\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n\n  for (let i = 2; i <= Number(amount.value); i++) {\n    createPromise(i, Number(step.value) * (i - 1)+ Number(delay.value))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","Number","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","i"],"version":3,"file":"03-promises.e913f277.js.map"}